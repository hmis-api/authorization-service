openapi: 3.0.0
info:
  title: HMIS Authorization Service
  version: 1.0.0
servers:
  - url: 'https://www.hslynk.com/hmis-authorization-service/rest'
paths:
  /authorize:
    get:
      responses:
        '200':
          description: >
            If the HMIS user grants the access request, the authorization
            service issues an authorization code and delivers it to the client
            by adding the following parameters to the query component of the
            redirection URI using the "application/x-www-form-urlencoded"
            format.
        '404':
          description: >
            If the request fails due to a missing, invalid, or mismatching
            redirection URI, or if the client identifier is missing or invalid,
            the authorization service will inform the HMIS  user of the error,
            and will not automatically redirect the user-agent to the invalid
            redirection URI.

            If the HMIS  user denies the access request or if the request fails
            for reasons other than a missing or invalid redirection URI, the
            authorization service informs the client by adding the following
            parameters to the query component of the redirection URI using the
            "application/x-www-form-urlencoded" format:

              <ul>
                <li>invalid_request
                  <ul>
                  The request is missing a required parameter, includes an invalid parameter value, or is otherwise malformed.
                  </ul>
                </li>
                <li>unauthorized_trustedApp
                  <ul>
                  The trustedApp is not authorized to request an authorization code using this method.
                  </ul>
                </li>
                <li>access_denied
                  <ul>
                  The user or authorization service denied the request.
                  </ul>
                </li>
                <li>unsupported_response_type
                  <ul>
                  The authorization service does not support obtaining an authorization code using this method.
                  </ul>
                </li>
                <li>server_error
                  <ul>
                  The authorization service encountered an unexpected condition which prevented it from fulfilling the request.
                  </ul>
                </li>
                <li>temporarily_unavailable
                  <ul>
              The authorization service is currently unable to handle the request due to a temporary overloading or maintenance of the server.    </ul>
                </li>
              </ul>
      description: >
        The authorization service validates the request to ensure all required
        parameters are present and valid. If the request is valid, the
        authorization service authenticates the Hmis  user and obtains an
        authorization decision/consent (by asking the HMIS  user).

        When a decision is established, the authorization service directs the
        user-agent to the provided client redirection URI using an HTTP
        redirection response
      operationId: GET_authorize
      parameters:
        - name: response_type
          in: query
          required: true
          description: >
            The value must be one ofcode for requesting an authorization
            <sctrong>code</sctrong> (authorization code grant flow))
            <sctrong>token</sctrong> for requesting an access token (implicit
            grant flow),
          schema:
            type: string
        - name: trustedApp_id
          in: query
          required: true
          description: >
            Indicates the trustedApp that is making the request.

            The trustedApp identifier issued to the trustedApp during the client
            registration process.
          schema:
            type: string
        - name: redirect_uri
          in: query
          required: true
          description: >
            Determines where the response is sent. The value of this parameter
            must exactly match one of the values registered during the
            trustedApp registration process (including the http or https
            schemes, case, and trailing '/').
          schema:
            type: string
        - name: state
          in: query
          description: >
            An opaque value used by the trustedApp to maintain state between the
            request and callback. The authorization service includes this value
            when redirecting the user-agent back to the trustedApp. The
            parameter should be used for preventing cross-site request forgery.
          schema:
            type: string
        - name: access_type
          in: query
          required: true
          description: >
            Indicates if the truedApp needs to access a HMIS Client API when the
            user is not present at the browser.

            This parameter defaults to <strong>online</strong>. If a trustedApp
            needs to refresh access tokens when the user is not present at the
            browser, then use <strong>offline</strong>. This will result in
            trustedApp obtaining a refresh token the first time the trustedApp
            exchanges an authorization code for a user. The implicit grant flow
            does not support <strong>offline<strong> access.
          schema:
            type: string
        - name: approval_prompt
          in: query
          required: true
          description: >
            Indicates if the user should be re-prompted for consent. The default
            is <strong>auto<strong>, so a given user should only see the consent
            page the first time through the sequence. If the value is force,
            then the user sees a consent page even if they have previously given
            consent to the trustedApp.
          schema:
            type: string
  /token:
    post:
      responses:
        '200':
          description: >
            If the access token request is valid and authorized, the
            authorization service issues an access token and optional refresh
            token, and constructs the response by adding the following
            parameters to the entity body of the HTTP response with a 200 (OK)
            status code
          content:
            application/json:
              schema:
                example:
                  access_token: 2YotnFZFEjr1zCsicMWpAA
                  token_type: Bearer
                  expires_in: 3600
                  refresh_token: tGzv3JOkF0XG5Qx2TlKWIA
        '400':
          description: >
            The authorization service responds with an HTTP 400 (Bad Request)
            status code and includes the following parameters with the response
               <table class="confluenceTable tablesorter">
                <thead><tr class="sortableHeader">
                  <th class="confluenceTh sortableHeader" data-column="0"><div class="tablesorter-header-inner"><p> Parameter Name </p></div></th>
                  <th class="confluenceTh sortableHeader" data-column="1"><div class="tablesorter-header-inner"><p> Description / Parameter Value </p></div></th>
                  <th class="confluenceTh sortableHeader" data-column="2"><div class="tablesorter-header-inner"><p> Required? </p></div></th>
                 </tr></thead><tbody>

                 <tr>
                  <td class="confluenceTd"><p> error </p></td>
                  <td class="confluenceTd"><p> A single error code from the following: <br class="atl-forced-newline">     <strong>invalid_request</strong> <br class="atl-forced-newline"> The request is missing a required parameter, includes an unsupported parameter value (other than grant type), repeats a parameter, includes multiple credentials, utilizes more than one mechanism for authenticating the client, or is otherwise malformed. <br class="atl-forced-newline"> <strong>invalid_client</strong> <br class="atl-forced-newline"> Client authentication failed (e.g. unknown client, no client authentication included, or unsupported authentication method). <br class="atl-forced-newline"> <strong>invalid_grant</strong> <br class="atl-forced-newline"> The provided authorization grant (e.g. authorization code, resource owner credentials) or refresh token is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client. This error code is also returned if the account is disabled. <br class="atl-forced-newline"> <strong>unauthorized_client</strong> <br class="atl-forced-newline"> The authenticated client is not authorized to use this authorization grant type. <br class="atl-forced-newline"> <strong>unsupported_grant_type</strong> <br class="atl-forced-newline"> The authorization grant type is not supported by the authorization service. <br class="atl-forced-newline"> <strong>server_error</strong> <br class="atl-forced-newline"> The authorization service encountered an unexpected condition which prevented it from fulfilling the request. <br class="atl-forced-newline"> <strong>temporarily_unavailable</strong> <br class="atl-forced-newline"> The authorization service is currently unable to handle the request due to a temporary overloading or maintenance of the server. </p></td>
                  <td class="confluenceTd"><p> Yes </p></td>
                 </tr>
                 <tr>
                  <td class="confluenceTd"><p> error_description </p></td>
                  <td class="confluenceTd"><p> A human-readable UTF-8 encoded text providing additional information, used to assist the client developer in understanding the error that occurred. </p></td>
                  <td class="confluenceTd"><p> No </p></td>
                 </tr>
                </tbody></table>
          content:
            application/json:
              schema:
                example:
                  error: invalid_request
      description: >
        The client makes a request to the token endpoint by adding the described
        query parameters using the "application/x-www-form-urlencoded" format in
        the HTTP request entity-body

        <strong>The authorization service does the following: </strong>
                <ul> <li> Authenticate the client and ensure the authorization code was issued to the authenticated client. </li>
                <li>  Verify that the authorization code is valid. </li>
                 <li> Ensure that the specified redirect_uri parameter value is same as the redirect_uri parameter value included in the initial authorization request as described in Authorization Code Grant Flow - Authorization Request.</li>
                </ul>
      operationId: POST_token
      requestBody:
        content:
          application/json:
            example: {}
            schema:
              type: string
        required: true
      parameters:
        - name: Authorization
          in: header
          required: true
          description: >
            The trustedApp must specify its credentials (i.e. trustedApp
            id:trustedApp secret issued during trustedApp registration) using
            HTTP Basic authentication scheme. The trustedApp identifier is used
            as the username, and the trustedApp secret is used as the password.
          schema:
            type: string
        - name: Accept
          in: header
          required: true
          schema:
            type: string
        - name: grant_type
          in: query
          required: true
          description: >
            As defined in the OAuth 2.0 specification, the value of this
            parameter must be set to  <strong> authorization_code</strong>. (in
            case of renewing access token by using refresh token this parameter
            value <strong>refrsh_token</strong>)
          schema:
            type: string
        - name: code
          in: query
          required: true
          description: |
            The authorization code received in the authorization response.
          schema:
            type: string
        - name: redirect_uri
          in: query
          required: true
          description: >
            The <strong>redirect_uri</strong> parameter that was included in the
            authorization request as described in Authorization Code Grant Flow
            - Authorization Request, and their values MUST be identical.
          schema:
            type: string
  /revoke:
    post:
      responses:
        '200':
          description: |
            revoking an access token:
            { "access_token"="SplxlOBeZQQYbYS6WxSbIA" }
            revoking a refresh token):
            {"refresh_token"="khgfkagasgurnjg434" }
            revoking a consent token:
            { "consent_token"="GLKfkfnafan349dljl" }
        '400':
          description: ''
          content:
            application/json:
              schema:
                example:
                  error: invalid_request
      description: >
        The revocation endpoint is used by the client to revoke one of the
        following tokens:

        1) access token

        2) refresh token - (i.e. refresh token and all related access tokens)

        3) consent token -(i.e. consent token and all related refresh tokens and
        access tokens)

        Developers may use this feature when configuring a Log Out button in
        their application.
      operationId: POST_revoke
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
  '/trustedapps/{trustedappid}/consentmessages':
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example:
                  oAuthMessageGroups:
                    oAuthMessageGroup:
                      - consentMessage: Read your basic account information
                        detailedConsentMessageExists: 'false'
                        oAuthMessageItems:
                          oAuthMessageItem:
                            consentMessage: >-
                              Read your account id, first name, middle name and
                              last name
                            detailedConsentMessageExists: 'false'
                      - consentMessage: read information associated with your account
                        oAuthMessageItems:
                          oAuthMessageItem:
                            - consentMessage: Sample consent message
                              detailedConsentMessageExists: 'false'
                            - consentMessage: sample consent message
                              detailedConsentMessageExists: 'false'
        '404':
          description: ''
          content:
            application/json:
              schema:
                example:
                  errors:
                    error:
                      code: TRUSTEDAPP_NOT_FOUND
                      message: the specified trusted app is not found
      description: Gets a list of consent messages for the specified trusted app.
      operationId: GET_trustedapps-trustedappid-consentmessages
    parameters:
      - name: trustedappid
        in: path
        required: true
        schema:
          type: string
  '/trustedapps/{trustedappid}/detailedconsentmessages':
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example:
                  oAuthMessageGroups:
                    oAuthMessageGroup:
                      consentMessage: Consent message for the API
                      detailedConsentMessage: some detailed consent message
                      oAuthMessageItems:
                        oAuthMessageItem:
                          detailedConsentMessage: This is the detailed consent message
        '404':
          description: ''
          content:
            application/json:
              schema:
                example:
                  errors:
                    error:
                      code: TRUSTEDAPP_NOT_FOUND
                      message: the specified client (trusted App) is not found
      description: Gets a list of detailed consent messages for the specified trustedapp.
      operationId: GET_trustedapps-trustedappid-detailedconsentmessages
    parameters:
      - name: trustedappid
        in: path
        required: true
        schema:
          type: string
components:
  schemas: {}
  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes:
    oauth_2_0:
      description: |
        The HMIS API supports OAuth 2.0 for authenticating all API requests.
      type: oauth2
      flows:
        password:
          tokenUrl: 'https://hmislynk.com/hmis-authorization-service/rest/token'
          scopes:
            user: ''
            administrator: ''
  links: {}
  callbacks: {}